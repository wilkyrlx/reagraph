{"version":3,"file":"demo-8f145094.js","sources":["../../node_modules/d3-array/src/range.js","../../docs/assets/demon.svg","../../docs/assets/computer.svg","../../docs/assets/demo.ts"],"sourcesContent":["export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export default \"__VITE_ASSET__5fd2f91a__\"","export default \"__VITE_ASSET__7574dab3__\"","import { range } from 'd3-array';\nimport { GraphEdge, GraphNode } from '../../src';\nimport demonSvg from './demon.svg';\nimport computerSvg from './computer.svg';\n\nexport const random = (floor, ceil) => Math.floor(Math.random() * ceil) + floor;\n\nexport const simpleNodes: GraphNode[] =\n  range(5).map(i => ({\n    id: `n-${i}`,\n    label: `Node ${i}`,\n    data: {\n      priority: random(0, 10)\n    }\n  }));\n\nexport const parentNodes: GraphNode[] = [\n  ...range(5).map(i => {\n    if (i === 2) {\n      return {\n        id: `n-${i}`,\n        label: `Node ${i} - 3 Children`,\n        data: {\n          priority: random(0, 10)\n        }\n      };\n    }\n\n    if (i === 3) {\n      return {\n        id: `n-${i}`,\n        label: `Node ${i} - 1 Child`,\n        data: {\n          priority: random(0, 10)\n        }\n      };\n    }\n\n    return {\n      id: `n-${i}`,\n      label: `Node ${i}`,\n      data: {\n        priority: random(0, 10)\n      }\n    };\n  }),\n  ...range(3).map(i => {\n    if (i === 0) {\n      return {\n        id: `n-2-n-${i}`,\n        label: `Node 2 > ${i} - 1 Child`,\n        data: {\n          priority: random(0, 10)\n        }\n      };\n    }\n\n    return {\n      id: `n-2-n-${i}`,\n      label: `Node 2 > ${i}`,\n      data: {\n        priority: random(0, 10)\n      }\n    };\n  }),\n  {\n    id: `n-2-n-0-n-0`,\n    label: `Node 2 > Node 0 > Node 0`,\n    data: {\n      priority: random(0, 10)\n    }\n  }\n]\n\nconst types = ['IP', 'URL', 'Email', 'MD5'];\nconst colors = ['#3730a3', '#c2410c', '#166534', '#075985'];\n\nexport const clusterNodes: GraphNode[] =\n  range(25).map(i => {\n    const idx = random(0, types.length);\n    const type = types[idx];\n\n    return {\n    id: `n-${i}`,\n    label: `${type} ${i}`,\n    fill: colors[idx],\n    data: {\n      type\n    }\n  }\n});\n\nexport const singleNodeClusterNodes: GraphNode[] =\n  range(2).map(i => {\n\n    const idx = i\n    const type = i;\n\n    return {\n    id: `n-${i}`,\n    label: `${type} ${i}`,\n    fill: colors[idx],\n    data: {\n      type\n    }\n  }\n});\n\nexport const imbalancedClusterNodes: GraphNode[] =\n  range(20).map(i => {\n    const idx = (i == 0) ? 2: (i % 2);\n    const type = types[idx];\n\n    return {\n    id: `n-${i}`,\n    label: `${type} ${i}`,\n    fill: colors[idx],\n    data: {\n      type\n    }\n  }\n});\n\nconst manyTypes = ['IPV4', 'URL', 'Email', 'MD5', 'SHA256', 'Domain', 'IPV6', 'CRC32', 'SHA512'];\n\nexport const manyClusterNodes: GraphNode[] =\n  range(500).map(i => {\n    const idx = random(0, manyTypes.length);\n    const type = manyTypes[idx];\n\n    return {\n    id: `n-${i}`,\n    label: `${type} ${i}`,\n    fill: colors[idx%colors.length],\n    data: {\n      type\n    }\n  }\n});\n\nexport const clusterEdges: GraphEdge[] = range(random(5, 25)).map(i => ({\n  id: `e-${i}`,\n  source: `n-${i}`,\n  target: `n-${random(0, clusterNodes.length - 1)}`,\n  label: '0-1'\n}));\n\nexport const simpleNodesColors: GraphNode[] =\n  range(5).map(i => ({\n    id: `n-${i}`,\n    label: `Node ${i}`,\n    fill: `hsl(${random(0, 360)}, 100%, 50%)`,\n  }));\n\nexport const iconNodes: GraphNode[] =\n  range(5).map(i => ({\n    id: `n-${i}`,\n    label: `Node ${i}`,\n    size: i % 2 === 0 ? 50 : 25,\n    icon: i % 2 === 0 ? computerSvg : demonSvg,\n    data: {\n      priority: random(0, 10)\n    }\n  }));\n\nexport const manyNodes: GraphNode[] =\n  range(100).map(i => ({\n    id: `n-${i}`,\n    label: `Node ${i}`,\n    data: {\n      priority: Math.floor(Math.random() * 10) + 1\n    }\n  }));\n\nexport const simpleEdges: GraphEdge[] = [\n  {\n    id: '0->1',\n    source: 'n-0',\n    target: 'n-1',\n    label: 'Edge 0-1'\n  },\n  {\n    id: '0->2',\n    source: 'n-0',\n    target: 'n-2',\n    label: 'Edge 0-2'\n  },\n  {\n    id: '0->3',\n    source: 'n-0',\n    target: 'n-3',\n    label: 'Edge 0-3'\n  },\n  {\n    id: '0->4',\n    source: 'n-0',\n    target: 'n-4',\n    label: 'Edge 0-4'\n  }\n];\n\nexport const parentEdges: GraphEdge[] = [\n  ...simpleEdges,\n  {\n    id: '2->2-0',\n    source: 'n-2',\n    target: 'n-2-n-0',\n    label: 'Edge 2-2-0'\n  },\n  {\n    id: '2->2-1',\n    source: 'n-2',\n    target: 'n-2-n-1',\n    label: 'Edge 2-2-1'\n  },\n  {\n    id: '2->2-2',\n    source: 'n-2',\n    target: 'n-2-n-2',\n    label: 'Edge 2-2-2'\n  },\n  {\n    id: '2->2-0->2-0-0',\n    source: 'n-2-n-0',\n    target: 'n-2-n-0-n-0',\n    label: 'Edge 2-2-0'\n  },\n  {\n    id: '3->2-0->2-0-0',\n    source: 'n-3',\n    target: 'n-2-n-0-n-0',\n    label: 'Edge 3-2-0'\n  }\n]\n\nexport const treeEdges: GraphEdge[] = [\n  {\n    id: '0->1',\n    source: 'n-0',\n    target: 'n-1',\n    label: 'Edge 0-1'\n  },\n  {\n    id: '0->2',\n    source: 'n-0',\n    target: 'n-2',\n    label: 'Edge 0-2'\n  },\n  {\n    id: '2->3',\n    source: 'n-2',\n    target: 'n-3',\n    label: 'Edge 2-3'\n  },\n  {\n    id: '3->4',\n    source: 'n-3',\n    target: 'n-4',\n    label: 'Edge 2-3'\n  }\n];\n\nexport const complexNodes: GraphNode[] =\n  range(25).map(i => ({\n    id: `${i}`,\n    label: `Node ${i}`\n  }));\n\nexport const complexEdges = [\n  { id: '0->2', source: '0', target: '2', label: 'Edge 0-2' },\n  { id: '1->3', source: '1', target: '3', label: 'Edge 1-3' },\n  { id: '2->4', source: '2', target: '4', label: 'Edge 2-4' },\n  { id: '3->5', source: '3', target: '5', label: 'Edge 3-5' },\n  { id: '5->15', source: '5', target: '15', label: 'Edge 5-15' },\n  { id: '5->7', source: '5', target: '7', label: 'Edge 5-7' },\n  { id: '6->8', source: '6', target: '8', label: 'Edge 6-8' },\n  { id: '7->9', source: '7', target: '9', label: 'Edge 7-9' },\n  { id: '8->10', source: '8', target: '10', label: 'Edge 8-10' },\n  { id: '9->11', source: '9', target: '11', label: 'Edge 9-11' },\n  { id: '10->12', source: '10', target: '12', label: 'Edge 10-12' },\n  { id: '11->13', source: '11', target: '13', label: 'Edge 11-13' },\n  { id: '22->9', source: '22', target: '9', label: 'Edge 22-9' },\n  { id: '13->15', source: '13', target: '15', label: 'Edge 13-15' },\n  { id: '14->16', source: '14', target: '16', label: 'Edge 14-16' },\n  { id: '15->17', source: '15', target: '17', label: 'Edge 15-17' },\n  { id: '16->18', source: '16', target: '18', label: 'Edge 16-18' },\n  { id: '17->19', source: '17', target: '19', label: 'Edge 17-19' },\n  { id: '18->20', source: '18', target: '20', label: 'Edge 18-20' },\n  { id: '19->21', source: '19', target: '21', label: 'Edge 19-21' },\n  { id: '20->22', source: '20', target: '22', label: 'Edge 20-22' },\n  { id: '21->23', source: '21', target: '23', label: 'Edge 21-23' },\n  { id: '22->24', source: '22', target: '24', label: 'Edge 22-24' },\n  { id: '23->0', source: '23', target: '0', label: 'Edge 23-0' },\n  { id: '24->1', source: '24', target: '1', label: 'Edge 24-1' },\n  { id: '0->3', source: '0', target: '3', label: 'Edge 0-3' },\n  { id: '1->4', source: '1', target: '4', label: 'Edge 1-4' },\n  { id: '2->5', source: '2', target: '5', label: 'Edge 2-5' },\n  { id: '3->6', source: '3', target: '6', label: 'Edge 3-6' },\n  { id: '4->7', source: '4', target: '7', label: 'Edge 4-7' },\n  { id: '5->8', source: '5', target: '8', label: 'Edge 5-8' },\n  { id: '6->9', source: '6', target: '9', label: 'Edge 6-9' },\n  { id: '7->10', source: '7', target: '10', label: 'Edge 7-10' },\n  { id: '8->11', source: '8', target: '11', label: 'Edge 8-11' },\n  { id: '9->12', source: '9', target: '12', label: 'Edge 9-12' },\n  { id: '10->13', source: '10', target: '13', label: 'Edge 10-13' },\n  { id: '11->14', source: '11', target: '14', label: 'Edge 11-14' },\n  { id: '12->15', source: '12', target: '15', label: 'Edge 12-15' },\n  { id: '13->16', source: '13', target: '16', label: 'Edge 13-16' },\n  { id: '14->17', source: '14', target: '17', label: 'Edge 14-17' },\n  { id: '15->18', source: '15', target: '18', label: 'Edge 15-18' },\n];\n"],"names":["range","start","stop","step","n","i","demonSvg","computerSvg","random","floor","ceil","simpleNodes","parentNodes","types","colors","clusterNodes","idx","type","singleNodeClusterNodes","imbalancedClusterNodes","manyTypes","manyClusterNodes","clusterEdges","simpleNodesColors","iconNodes","manyNodes","simpleEdges","parentEdges","treeEdges","complexNodes","complexEdges"],"mappings":"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","x_google_ignoreList":[0]}