{"version":3,"file":"Collapsible.story-2822f07f.js","sources":["../../src/collapse/useCollapse.ts"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { GraphEdge, GraphNode } from 'types';\nimport { getExpandPath, getVisibleEntities } from './utils';\n\nexport interface UseCollapseProps {\n  /**\n   * Current collapsed node ids.\n   */\n  collapsedNodeIds?: string[];\n\n  /**\n   * Node data.\n   */\n  nodes?: GraphNode[];\n\n  /**\n   * Edge data.\n   */\n  edges?: GraphEdge[];\n}\n\nexport interface CollpaseResult {\n  /**\n   * Determine if a node is currently collapsed\n   */\n  getIsCollapsed: (nodeId: string) => boolean;\n\n  /**\n   * Return a list of ids required to expand in order to view the provided node\n   */\n  getExpandPathIds: (nodeId: string) => string[];\n}\n\nexport const useCollapse = ({\n  collapsedNodeIds = [],\n  nodes = [],\n  edges = []\n}: UseCollapseProps): CollpaseResult => {\n  const getIsCollapsed = useCallback(\n    (nodeId: string) => {\n      const { visibleNodes } = getVisibleEntities({\n        nodes,\n        edges,\n        collapsedIds: collapsedNodeIds\n      });\n      const visibleNodeIds = visibleNodes.map(n => n.id);\n\n      return !visibleNodeIds.includes(nodeId);\n    },\n    [collapsedNodeIds, edges, nodes]\n  );\n\n  const getExpandPathIds = useCallback(\n    (nodeId: string) => {\n      const { visibleEdges } = getVisibleEntities({\n        nodes,\n        edges,\n        collapsedIds: collapsedNodeIds\n      });\n      const visibleEdgeIds = visibleEdges.map(e => e.id);\n\n      return getExpandPath({ nodeId, edges, visibleEdgeIds });\n    },\n    [collapsedNodeIds, edges, nodes]\n  );\n\n  return {\n    getIsCollapsed,\n    getExpandPathIds\n  };\n};\n"],"names":["useCollapse","collapsedNodeIds","nodes","edges","getIsCollapsed","useCallback","nodeId","visibleNodes","getVisibleEntities","n","getExpandPathIds","visibleEdges","visibleEdgeIds","e","getExpandPath"],"mappings":"sUAiCO,MAAMA,EAAc,CAAC,CAC1B,iBAAAC,EAAmB,CAAC,EACpB,MAAAC,EAAQ,CAAC,EACT,MAAAC,EAAQ,CAAC,CACX,IAAwC,CACtC,MAAMC,EAAiBC,EAAA,YACpBC,GAAmB,CACZ,KAAA,CAAE,aAAAC,CAAa,EAAIC,EAAmB,CAC1C,MAAAN,EACA,MAAAC,EACA,aAAcF,CAAA,CACf,EAGM,MAAA,CAFgBM,EAAa,IAAIE,GAAKA,EAAE,EAAE,EAE1B,SAASH,CAAM,CACxC,EACA,CAACL,EAAkBE,EAAOD,CAAK,CAAA,EAG3BQ,EAAmBL,EAAA,YACtBC,GAAmB,CACZ,KAAA,CAAE,aAAAK,CAAa,EAAIH,EAAmB,CAC1C,MAAAN,EACA,MAAAC,EACA,aAAcF,CAAA,CACf,EACKW,EAAiBD,EAAa,IAAIE,GAAKA,EAAE,EAAE,EAEjD,OAAOC,EAAc,CAAE,OAAAR,EAAQ,MAAAH,EAAO,eAAAS,CAAgB,CAAA,CACxD,EACA,CAACX,EAAkBE,EAAOD,CAAK,CAAA,EAG1B,MAAA,CACL,eAAAE,EACA,iBAAAM,CAAA,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}