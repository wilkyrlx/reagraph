import{j as e}from"./jsx-runtime-9c4ae004.js";import{G as s,l as o}from"./RadialMenu-a21554b3.js";import"./index-1b03fe98.js";import{f as r,r as se,g as re,h as te,j as ae,k as a}from"./demo-8f145094.js";import"./index-27578f8f.esm-24d23efb.js";import"./extends-98964cd2.js";import"./client-449ccf6c.js";import"./index-6fd5a17b.js";const pe={title:"Demos/Cluster",component:s},c=()=>e.jsx(s,{nodes:r,draggable:!0,edges:[],clusterAttribute:"type"}),ee=r.map(t=>({...t,size:se(0,50)})),l=()=>e.jsx(s,{nodes:ee,draggable:!0,edges:[],clusterAttribute:"type"}),u=()=>e.jsx(s,{nodes:re,draggable:!0,edges:[],clusterAttribute:"type"}),d=()=>e.jsx(s,{nodes:te,draggable:!0,edges:[],clusterAttribute:"type"}),n=()=>e.jsx(s,{nodes:ae,draggable:!0,edges:[],clusterAttribute:"type"}),i=()=>e.jsx(s,{nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),g=()=>e.jsx(s,{nodes:r,selections:[r[0].id],edges:a,clusterAttribute:"type"}),p=()=>e.jsx(s,{nodes:r,draggable:!0,edges:a,clusterAttribute:"type",onClusterPointerOut:t=>console.log("cluster pointer out",t),onClusterPointerOver:t=>console.log("cluster pointer over",t),onClusterClick:t=>console.log("cluster click",t)}),m=()=>e.jsx(s,{theme:{...o,cluster:null},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),b=()=>e.jsx(s,{theme:{...o,cluster:{...o.cluster,label:null}},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),h=()=>e.jsx(s,{theme:{...o,cluster:{...o.cluster,stroke:null}},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),y=()=>e.jsx(s,{nodes:ee,draggable:!0,edges:[],layoutType:"forceDirected3d",clusterAttribute:"type",children:e.jsx("directionalLight",{position:[0,5,-4],intensity:1})});var C,A,N;c.parameters={...c.parameters,docs:{...(C=c.parameters)==null?void 0:C.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} draggable edges={[]} clusterAttribute="type" />',...(N=(A=c.parameters)==null?void 0:A.docs)==null?void 0:N.source}}};var v,S,j;l.parameters={...l.parameters,docs:{...(v=l.parameters)==null?void 0:v.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodesWithSizes} draggable edges={[]} clusterAttribute="type" />',...(j=(S=l.parameters)==null?void 0:S.docs)==null?void 0:j.source}}};var x,G,E;u.parameters={...u.parameters,docs:{...(x=u.parameters)==null?void 0:x.docs,source:{originalSource:'() => <GraphCanvas nodes={singleNodeClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(E=(G=u.parameters)==null?void 0:G.docs)==null?void 0:E.source}}};var T,f,k;d.parameters={...d.parameters,docs:{...(T=d.parameters)==null?void 0:T.docs,source:{originalSource:'() => <GraphCanvas nodes={imbalancedClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(k=(f=d.parameters)==null?void 0:f.docs)==null?void 0:k.source}}};var z,D,L;n.parameters={...n.parameters,docs:{...(z=n.parameters)==null?void 0:z.docs,source:{originalSource:'() => <GraphCanvas nodes={manyClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(L=(D=n.parameters)==null?void 0:D.docs)==null?void 0:L.source}}};var O,P,W;i.parameters={...i.parameters,docs:{...(O=i.parameters)==null?void 0:O.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />',...(W=(P=i.parameters)==null?void 0:P.docs)==null?void 0:W.source}}};var B,I,R;g.parameters={...g.parameters,docs:{...(B=g.parameters)==null?void 0:B.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} selections={[clusterNodes[0].id]} edges={clusterEdges} clusterAttribute="type" />',...(R=(I=g.parameters)==null?void 0:I.docs)==null?void 0:R.source}}};var _,q,w;p.parameters={...p.parameters,docs:{...(_=p.parameters)==null?void 0:_.docs,source:{originalSource:`() => <GraphCanvas nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" onClusterPointerOut={cluster => console.log('cluster pointer out', cluster)} onClusterPointerOver={cluster => console.log('cluster pointer over', cluster)} onClusterClick={cluster => console.log('cluster click', cluster)} />`,...(w=(q=p.parameters)==null?void 0:q.docs)==null?void 0:w.source}}};var F,H,J;m.parameters={...m.parameters,docs:{...(F=m.parameters)==null?void 0:F.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: null
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(J=(H=m.parameters)==null?void 0:H.docs)==null?void 0:J.source}}};var K,M,Q;b.parameters={...b.parameters,docs:{...(K=b.parameters)==null?void 0:K.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: {
    ...lightTheme.cluster,
    label: null
  }
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(Q=(M=b.parameters)==null?void 0:M.docs)==null?void 0:Q.source}}};var U,V,X;h.parameters={...h.parameters,docs:{...(U=h.parameters)==null?void 0:U.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: {
    ...lightTheme.cluster,
    stroke: null
  }
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(X=(V=h.parameters)==null?void 0:V.docs)==null?void 0:X.source}}};var Y,Z,$;y.parameters={...y.parameters,docs:{...(Y=y.parameters)==null?void 0:Y.docs,source:{originalSource:`() => <GraphCanvas nodes={clusterNodesWithSizes} draggable edges={[]} layoutType="forceDirected3d" clusterAttribute="type">
    <directionalLight position={[0, 5, -4]} intensity={1} />
  </GraphCanvas>`,...($=(Z=y.parameters)==null?void 0:Z.docs)==null?void 0:$.source}}};export{i as Edges,p as Events,d as ImbalancedClusters,h as LabelsOnly,n as LargeDataset,m as NoBoundary,b as NoLabels,g as Selections,c as Simple,u as SingleNodeClusters,l as Sizes,y as ThreeDimensions,pe as default};
//# sourceMappingURL=Cluster.story-d9e13167.js.map
