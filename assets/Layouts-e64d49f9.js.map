{"version":3,"file":"Layouts-e64d49f9.js","sources":["../../docs/Layouts.mdx"],"sourcesContent":["import { Meta, Story } from '@storybook/blocks';\n\n<Meta title=\"Docs/Getting Started/Layouts\" />\n\n# Layouts\nreagraph has the following layout types:\n\n- Force Directed 2D\n- Force Directed 3D\n- Circular 2D\n- Tree Top Down 2D\n- Tree Left Right 2D\n- Tree Top Down 3D\n- Tree Left Right 3D\n- Radial Out 2D\n- Radial Out 3D\n- Hierarchical Top Down 2D\n- Hierarchical Left Right 2D\n- No Overlap 2D\n- ForceAtlas2 2D\n- Custom\n\n## Layout Overrides\nYou can override the default layout options for each respective layout using\nthe `layoutOverrides` property on the `GraphCanvas` component. In each layout\ndescription, it will list the available overrides for that layout if applicable.\n\n### Position Overrides\nYou can override the position in any layout by passing the `getNodePosition` property\nto the canvas.\n\n```ts\nexport interface NodePositionArgs {\n  /**\n   * The graphology object. Useful for any graph manipulation.\n   */\n  graph: Graph;\n\n  /**\n   * Any nodes that were dragged. This is useful if you want to override\n   * the position of a node when dragged.\n   */\n  drags?: DragReferences;\n\n  /**\n   * The nodes for the graph.\n   */\n  nodes: InternalGraphNode[];\n\n  /**\n   * The edges for the graph.\n   */\n  edges: InternalGraphEdge[];\n}\n\n/**\n * Get the node position for a given node id.\n */\ngetNodePosition: (\n  id: string,\n  args: NodePositionArgs\n) => InternalGraphPosition;\n```\n\nSee custom layouts for more information.\n\n## Layout Types\nBelow are examples of each layout type and corresponding descriptions.\n\n### Force Directed 2D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--force-directed\" />\n</div>\n\nThis is the standard force-directed layout which uses [d3-force-3d](https://github.com/vasturiano/d3-force-3d).\nThis is a modified version of the force directed library from d3 except adds support for three dimensional layouts.\n\nThis is a one of the most common layouts used because of the simplicity and flexibility that the layout\ncan support.\n\nThis layout supports the following overrides:\n\n```ts\nexport interface ForceDirectedLayoutInputs extends LayoutFactoryProps {\n  /**\n   * Center inertia for the layout. Default: 1.\n   */\n  centerInertia?: number;\n\n  /**\n   * Number of dimensions for the layout. 2d or 3d.\n   */\n  dimensions?: number;\n\n  /**\n   * Mode for the dag layout. Only applicable for dag layouts.\n   */\n  mode?: DagMode;\n\n  /**\n   * Distance between links.\n   */\n  linkDistance?: number;\n\n  /**\n   * Strength of the node repulsion.\n   */\n  nodeStrength?: number;\n\n  /**\n   * Strength of the cluster repulsion.\n   */\n  clusterStrength?: number;\n\n  /**\n   * The type of clustering.\n   */\n  clusterType?: 'force' | 'treemap';\n\n  /**\n   * Ratio of the distance between nodes on the same level.\n   */\n  nodeLevelRatio?: number;\n\n  /**\n   * LinkStrength between nodes of different clusters\n   */\n  linkStrengthInterCluster?: number;\n\n  /**\n   * LinkStrength between nodes of the same cluster\n   */\n  linkStrengthIntraCluster?: number;\n\n  /**\n   * Charge between the meta-nodes (Force template only)\n   */\n  forceLinkDistance?: number;\n\n  /**\n   * Used to compute the template force nodes size (Force template only)\n   */\n  forceLinkStrength?: number;\n\n  /**\n   * Used to compute the template force nodes size (Force template only)\n   */\n  forceCharge?: number;\n}\n```\n\n### Force Directed 3D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-3d--force-directed\" />\n</div>\n\nThe force directed 3d layout is similar to the 2D version except it adds another dimension. It uses\nthe same library as the 2D version ( [d3-force-3d](https://github.com/vasturiano/d3-force-3d) ).\nThe 3D version is useful for very large graphs where many nodes would overlap each other.\n\nThis layout accepts the same layout overrides as the `forceDirected2d`.\n\n### Circular 2d\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--circular\" />\n</div>\n\nThe circular layout arranges nodes in a circular fashion drawing relationships between the nodes\non the outside of the circle.\n\nThis layout supports the following overrides:\n\n```ts\nexport interface CircularLayoutInputs extends LayoutFactoryProps {\n  /**\n   * Radius of the circle.\n   */\n  radius: 300;\n}\n```\n\n### Tree 2D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--tree-top-down\" />\n</div>\n\nThe tree layout is a good way to display a clear parent-child relationship between nodes. This layout uses\n[d3-force-3d](https://github.com/vasturiano/d3-force-3d).\n\nThis layout accepts the same layout overrides as the `forceDirected2d`.\n\n### Tree 3D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-3d--tree-top-down\" />\n</div>\n\nThis layout is the same as the tree 2d except adds another dimension. It uses\n[d3-force-3d](https://github.com/vasturiano/d3-force-3d) under the hood for the layout.\n\nThis layout accepts the same layout overrides as the `forceDirected2d`.\n\n### Radial 2D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--radial-out\" />\n</div>\n\nThe radial layout arranges nodes in a circular fashion around the focus node in a radial tree. Each\nrelationship extends to another level in the tree to show a depedency tree.\nThis layout uses [d3-force-3d](https://github.com/vasturiano/d3-force-3d).\n\nThis layout accepts the same layout overrides as the `forceDirected2d`.\n\n### Radial 3D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-3d--radial-out\" />\n</div>\n\nSimilar to the Radial 2D but adds another dimension. This layout uses [d3-force-3d](https://github.com/vasturiano/d3-force-3d).\n\nThis layout accepts the same layout overrides as the `forceDirected2d`.\n\n### Hierarchical 2D\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--hierarchical-top-down\" />\n</div>\n\nThis layout uses [d3-hierarchy](https://www.npmjs.com/package/d3-hierarchy).\n\nThis layout supports the following overrides:\n\n```ts\nexport interface HierarchicalLayoutInputs extends LayoutFactoryProps {\n  /**\n   * Direction of the layout.\n   */\n  mode?: 'td' | 'lr';\n}\n```\n\n### No Overlap\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--no-overlap\" />\n</div>\n\nThis layout uses [graphology-layout-nooverlap](https://graphology.github.io/standard-library/layout-noverlap.html).\n\nThis layout supports the following overrides:\n\n```ts\nexport interface NoOverlapLayoutInputs extends LayoutFactoryProps {\n  /**\n   * Grid size. Default 20.\n   */\n  gridSize?: number;\n\n  /**\n   * Ratio of the layout. Default 10.\n   */\n  ratio?: number;\n\n  /**\n   * Maximum number of iterations. Default 50.\n   */\n  maxIterations?: number;\n\n  /**\n   * Margin between nodes. Default 10.\n   */\n  margin?: number;\n}\n```\n\n### Force Atlas 2\n<div style={{ height: 300, width: 500, position: 'relative', background: 'white', borderRadius: 4, border: '1px solid rgba(0,0,0,.1)', boxShadow: 'rgb(0 0 0 / 10%) 0 1px 3px 0', overflow: 'hidden' }}>\n  <Story id=\"demos-layouts-2d--force-atlas-2\" />\n</div>\n\nThis layout uses [graphology-layout-forceatlas2](https://graphology.github.io/standard-library/layout-forceatlas2.html).\n\nThis layout supports the following overrides:\n\n```ts\nexport interface ForceAtlas2LayoutInputs extends LayoutFactoryProps {\n  /**\n   * Should the node’s sizes be taken into account. Default: false.\n   */\n  adjustSizes?: boolean;\n\n  /**\n   * whether to use the Barnes-Hut approximation to compute\n   * repulsion in O(n*log(n)) rather than default O(n^2),\n   * n being the number of nodes. Default: false.\n   */\n  barnesHutOptimize?: boolean;\n\n  /**\n   * Barnes-Hut approximation theta parameter. Default: 0.5.\n   */\n  barnesHutTheta?: number;\n\n  /**\n   * Influence of the edge’s weights on the layout. To consider edge weight, don’t\n   *  forget to pass weighted as true. Default: 1.\n   */\n  edgeWeightInfluence?: number;\n\n  /**\n   * Strength of the layout’s gravity. Default: 10.\n   */\n  gravity?: number;\n\n  /**\n   * Whether to use Noack’s LinLog model. Default: false.\n   */\n  linLogMode?: boolean;\n\n  /**\n   * Whether to consider edge weights when calculating repulsion. Default: false.\n   */\n  outboundAttractionDistribution?: boolean;\n\n  /**\n   * Scaling ratio for repulsion. Default: 100.\n   */\n  scalingRatio?: number;\n\n  /**\n   * Speed of the slowdown. Default: 1.\n   */\n  slowDown?: number;\n\n  /**\n   * Whether to use the strong gravity mode. Default: false.\n   */\n  strongGravityMode?: boolean;\n\n  /**\n   * Number of iterations to perform. Default: 50.\n   */\n  iterations?: number;\n}\n```\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","Story","MDXContent","MDXLayout"],"mappings":"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"}