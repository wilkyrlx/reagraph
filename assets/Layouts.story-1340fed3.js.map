{"version":3,"file":"Layouts.story-1340fed3.js","sources":["../../src/layout/recommender.ts"],"sourcesContent":["import { GraphEdge, GraphNode } from '../types';\nimport { getNodeDepth } from './depthUtils';\nimport { LayoutTypes } from './types';\n\n/**\n * Given a set of nodes and edges, determine the type of layout that\n * is most ideal. This is very beta.\n */\nexport function recommendLayout(\n  nodes: GraphNode[],\n  edges: GraphEdge[]\n): LayoutTypes {\n  const { invalid } = getNodeDepth(nodes as any[], edges as any[]);\n  const nodeCount = nodes.length;\n\n  if (!invalid) {\n    // Large tree layouts\n    if (nodeCount > 100) {\n      return 'radialOut2d';\n    } else {\n      // Smaller tree layouts\n      return 'treeTd2d';\n    }\n  }\n\n  // Circular layouts\n  return 'forceDirected2d';\n}\n"],"names":["recommendLayout","nodes","edges","invalid","getNodeDepth","nodeCount"],"mappings":"0TAQgB,SAAAA,EACdC,EACAC,EACa,CACb,KAAM,CAAE,QAAAC,CAAY,EAAAC,EAAaH,EAAgBC,CAAc,EACzDG,EAAYJ,EAAM,OAExB,OAAKE,EAWE,kBATDE,EAAY,IACP,cAGA,UAMb;;;;;;;;;;;;;;;;;;"}